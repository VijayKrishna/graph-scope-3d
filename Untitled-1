			var fromColor = fromNode.data.sphere.material.color;
			var toColor = toNode.data.sphere.material.color;

			var colors = [];
			for (var i = 0; i < 25; i += 1) {
				colors.push(fromColor.r);
				colors.push(fromColor.g);
				colors.push(fromColor.b);
			}
			for (var i = 0; i < 25; i += 1) {
				colors.push(toColor.r);
				colors.push(toColor.g);
				colors.push(toColor.b);
			}

			var line = link.data.line;
			var lineGeometry = line.geometry;
			lineGeometry.addAttribute( 'color', new THREE.Float32BufferAttribute( colors, 3 ) );
			lineGeometry.colorsNeedUpdate = true;

			var newMaterial = new THREE.LineBasicMaterial({
				// color: fromColor.getHex(),
				vertexColors: true,
				transparent: true,
				linewidth: 1,
				opacity: 0.25,
				// needsUpdate: true
			});

			link.data.line.material = newMaterial;